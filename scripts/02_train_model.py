#!/usr/bin/env python3
"""
Training script for YOLOv8 model
"""

import sys
import os
import torch

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(script_dir)
if project_root not in sys.path:
    sys.path.insert(0, project_root)

from ultralytics import YOLO

def check_gpu():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GPU"""
    if torch.cuda.is_available():
        device = "cuda"
        device_count = torch.cuda.device_count()
        print(f"‚úÖ GPU –¥–æ—Å—Ç—É–ø–µ–Ω: {device_count} —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
        return device
    else:
        print("‚ö†Ô∏è  GPU –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º CPU")
        return "cpu"

def main():
    print("üöÄ –ó–ê–ü–£–°–ö –û–ë–£–ß–ï–ù–ò–Ø YOLOv8")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
    if not os.path.exists('configs/clavicle_config.yaml'):
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ 01_analyze_data.py")
        return
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•:")
    print("- –ö–æ–Ω—Ñ–∏–≥: ‚úÖ –Ω–∞–π–¥–µ–Ω")
    print("- –î–∞–Ω–Ω—ã–µ: ‚úÖ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
    device = check_gpu()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
    print("üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å YOLOv8...")
    model = YOLO('yolov8n.pt')  # –ù–∞—á–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å
    
    # –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å
    print("üéØ –ù–ê–ß–ò–ù–ê–ï–ú –û–ë–£–ß–ï–ù–ò–ï...")
    try:
        results = model.train(
            data='configs/clavicle_config.yaml',
            epochs=10,  # –ú–∏–Ω–∏–º—É–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            imgsz=320,  # –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –¥–ª—è CPU
            batch=4,    # –£–º–µ–Ω—å—à–∏–ª–∏ –±–∞—Ç—á –¥–ª—è CPU
            patience=5,
            device=device,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            workers=0,  # –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –≤ Colab
            lr0=0.01,
            save=True,
            exist_ok=True,
            verbose=True  # –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
        )
        
        print("‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: runs/detect/train/")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
        if hasattr(results, 'results_dict'):
            print("üìä –ú–µ—Ç—Ä–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è:")
            for key, value in results.results_dict.items():
                print(f"   {key}: {value:.4f}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {e}")
        print("üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main()
